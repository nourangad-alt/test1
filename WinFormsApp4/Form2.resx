<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxCOACH.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>